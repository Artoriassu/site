{"version":3,"sources":["components/Navbar/Navbar.module.css","assets/f1.jpeg","assets/circles.svg","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","redux/usersReducer.js","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/sidebarReducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","setCurrentPage","type","toggleIsFetching","toggleFollowingProgress","userId","usersReducer","state","action","map","u","id","followed","count","filter","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","get","then","response","data","follow","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","posts_Data","counter","message","profile","setStatus","profileReducer","messageBody","newPostText","dialogs","avatar","person","messages","text","dialogsReducer","mesText","newMessageBody","newMessageText","newText","friends_sidebar","sidebarReducer","email","login","isAuth","authReducer","require","createStore","combineReducers","applyMiddleware","store","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","thunkMiddleware","Header","props","className","view","header","logo","src","loginBlock","to","HeaderContainer","this","getAuthUserData","React","Component","connect","dispatch","resultCode","setAuthUserData","SidebarFriend","path","sidebar_person","dialog_person","Navbar","sidebar_elements","sidebar_pers","nav","item","activeClassName","active","NavbarContainer","FormControl","input","meta","child","hasError","touched","error","form_control","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","DialogItem","dialog","Message","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","newMessage_TextArea","Field","component","name","placeholder","validate","Dialogs","dialogs_Elements","dial_info","messages_Elements","mes_info","dialogs_items","values","addMessage","withAuthRedirect","RedirectComponent","compose","addMessage_actionCreator","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","e","onPageChanged","photos","small","userPhoto","disabled","some","Preloader","preloader","UsersContainer","pageNumber","followSuccess","unfollowSuccess","items","totalCount","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","OnStatusChange","currentTarget","prevProps","prevState","onDoubleClick","autoFocus","onChange","onBlur","ProfileInfo","description","large","Post","AddNewPostFormRedux","MyPosts","posts_Elements","post_info","Posts_Block","addPost","posts","MyPostsContainer","addPost_actionCreator","Profile","ProfileContainer","params","getUserProfile","withRouter","LoginReduxForm","Login","formdata","console","log","App","render","DialogsContainer","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b82c9c78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2J-hA\",\"item\":\"Navbar_item__3iZuU\",\"active\":\"Navbar_active__2QOU5\",\"sidebar\":\"Navbar_sidebar__3NKo8\",\"sidebar_person\":\"Navbar_sidebar_person__-sokA\"};","module.exports = __webpack_public_path__ + \"static/media/f1.365120d5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/circles.1181204b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1f545\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    users: { ...state.users },\r\n                    users: state.users.map(u => {\r\n                        if (u.id === action.userId) {\r\n                            return { ...u, followed: true }\r\n                        }\r\n                        return u;\r\n                    })\r\n                }\r\n            }\r\n        case UNFOLLOW:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    users: { ...state.users },\r\n                    users: state.users.map(u => {\r\n                        if (u.id === action.userId) {\r\n                            return { ...u, followed: false }\r\n                        }\r\n                        return u;\r\n                    })\r\n                }\r\n            }\r\n        case SET_USERS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    users: action.users\r\n                }\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    currentPage: action.currentPage,\r\n                }\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    totalUsersCount: action.count,\r\n                }\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isFetching: action.isFetching,\r\n                }\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    followingInProgress: action.isFetching\r\n                     ? [...state.followingInProgress, action.userId]\r\n                     : state.followingInProgress.filter(id => id != action.userId)\r\n                }\r\n                \r\n            }\r\n        default:\r\nreturn state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FETCHING, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    debugger;\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import * as axios from 'axios';\r\nimport { follow } from '../redux/usersReducer';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '6a3a9973-6a76-4f80-b3dc-07dc549eada4'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        // устаревший метод - 73\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`);\r\n    }\r\n}\r\n\r\n","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts_Data: [\r\n        { id: 1, counter: 0, message: 'Hi' },\r\n        { id: 2, counter: 0, message: 'I`m here.' },\r\n        { id: 3, counter: 0, message: 'Hey?' },\r\n        { id: 4, counter: 0, message: 'Do you hear me?' },\r\n        { id: 5, counter: 0, message: '...' },\r\n        { id: 6, counter: 0, message: '...' },\r\n        { id: 7, counter: 1, message: 'I`m waiting...' },\r\n    ],\r\n    profile: null,\r\n    status: ``,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let messageBody = action.newPostText;\r\n            return {\r\n                ...state,\r\n                posts_Data: [...state.posts_Data, { id: 8, message: messageBody, counter: 0 }],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPost_actionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n        \r\n        dispatch(setStatus(response.data));\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n}\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, avatar: 'http://avatarmaker.ru/img/11/1022/102144.gif', person: \"Artemis\" },\r\n        { id: 2, avatar: 'http://avatarmaker.ru/img/11/1041/104096.gif', person: \"Elfi\" },\r\n        { id: 3, avatar: 'http://avatarmaker.ru/img/9/895/89468.jpg', person: \"Artas\" },\r\n        { id: 4, avatar: 'http://avatarmaker.ru/img/9/813/81229.jpg', person: \"Illidan\" },\r\n        { id: 5, avatar: 'http://avatarmaker.ru/img/11/1021/102083.gif', person: \"Rafael\" },\r\n    ],\r\n    messages: [\r\n        { id: 1, text: 'Hi!' },\r\n        { id: 2, text: 'I have a present for you.' },\r\n        { id: 3, text: 'Today it` so beatufil day...' },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let mesText = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 8,text: mesText}],\r\n            }\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage_actionCreator = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody })\r\nexport const onMessageChange_actionCreator = (text) =>\r\n    ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text })\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    friends_sidebar: [\r\n        { id: 'lord_rafael', avatar: 'http://avatarmaker.ru/img/11/1021/102083.gif', person: \"Rafael\" },\r\n        { id: 'cold_king', avatar: 'http://avatarmaker.ru/img/9/895/89468.jpg', person: \"Artas\" },\r\n        { id: 'warrior_illid', avatar: 'http://avatarmaker.ru/img/9/813/81229.jpg', person: \"Illidan\" },\r\n        { id: 'brain_master', avatar: 'http://avatarmaker.ru/img/11/1022/102144.gif', person: \"Artemis\" },\r\n        { id: 'fairy_shadow', avatar: 'http://avatarmaker.ru/img/11/1041/104096.gif', person: \"Elfi\" },\r\n    ],\r\n};\r\n\r\nconst sidebarReducer = (state = initialState,action) => {\r\n    \r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n   /*  isFetching: false, */\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    ...action.data,\r\n                    isAuth: true,\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({ type: SET_USER_DATA, data: { userId, email, login } })\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login));\r\n        }\r\n    });\r\n}\r\n\r\nexport default authReducer;","import profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport view from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={view.header}>\r\n      <img className={view.logo} src='https://www.logologo.com/logos/fox-logo.jpg' />\r\n      <div className={view.loginBlock}>\r\n        {props.isAuth ? props.login\r\n          : <NavLink to={'/login'}>Login </NavLink>}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthUserData } from '../../redux/auth-reducer';\r\nimport { authAPI } from '../../api/api';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    this.props.getAuthUserData();\r\n    /* this.props.toggleIsFetching(false); */\r\n\r\n  }\r\n\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuthUserData })(HeaderContainer);","import React from 'react';\r\nimport view from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SidebarFriend = (props) => {\r\n  let path = '/' + props.id;\r\n  return (\r\n      <div className={view.sidebar_person}>\r\n          <img src={props.avatar}/>\r\n          <NavLink className={view.dialog_person} to={path}> {props.person}</NavLink>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst Navbar = (props) => {\r\nlet sidebar_elements = props.friends_sidebar\r\n.map(sidebar_pers => <SidebarFriend id={sidebar_pers.id} avatar={sidebar_pers.avatar} person={sidebar_pers.person}  />)\r\n\r\n  return (\r\n    <nav className={view.nav}>\r\n      <div className={view.item}> <NavLink to='/profile' activeClassName={view.active}>Profile</NavLink></div>\r\n      <div className={view.item}> <NavLink to='/dialogs' activeClassName={view.active}>Messages</NavLink></div>\r\n      <div className={view.item}> <NavLink to='/news' activeClassName={view.active}>News</NavLink></div>\r\n      <div className={view.item}> <NavLink to='/music' activeClassName={view.active}>Music</NavLink></div>\r\n      <div className={view.item}> <NavLink to='/settings' activeClassName={view.active}>Settings</NavLink></div>\r\n      <div className={view.item}> <NavLink to='/users' activeClassName={view.active}>Search User</NavLink></div>\r\n\r\n      <div className={view.sidebar}>\r\n        <h2>Friends</h2>\r\n  {sidebar_elements}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport view from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    friends_sidebar: state.sidebar.friends_sidebar,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport view from './FormsControls.module.css'\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    debugger;\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={view.form_control + ' ' + (hasError ? view.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    debugger;\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps} />\r\n    </FormControl>\r\n\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport view from './Dialogs.module.css';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength = maxLengthCreator(100);\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={view.dialog}>\r\n            <img src={props.avatar} />\r\n            <NavLink className={view.dialog_person} to={path}> {props.person}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={view.message}>{props.text}</div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogs_Elements = props.dialogsPage.dialogs\r\n        .map(dial_info => <DialogItem id={dial_info.id} avatar={dial_info.avatar} person={dial_info.person} />)\r\n\r\n    let messages_Elements = props.dialogsPage.messages\r\n        .map(mes_info => <Message text={mes_info.text} />)\r\n\r\n    const addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div className={view.dialogs}>\r\n\r\n            <div className={view.dialogs_items}>\r\n                {dialogs_Elements}\r\n            </div>\r\n            <div className={view.messages}>\r\n                {messages_Elements}\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={view.newMessage_TextArea}>\r\n                <Field component={Textarea} name='newMessageBody' placeholder='Your message' \r\n                validate={[required, maxLength ]} />\r\n            </div>\r\n            <div> <button>Add</button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport { addMessage_actionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessage_actionCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);","import React from 'react';\r\nimport view from './Users.module.css';\r\nimport userPhoto from '../../assets/f1.jpeg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from 'axios';\r\nimport { usersAPI } from '../../api/api';\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && view.selectedPage}\r\n                    onClick={(e) => { props.onPageChanged(p); }}>{p} </span>\r\n            })}\r\n\r\n        </div>\r\n        {\r\n           \r\n            props.users.map(u =>\r\n                <div className={view.item}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    {u.name}\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id);\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id);\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                    <div>\r\n                        <span>Status : {u.status}</span>\r\n                    </div>\r\n                    <div>Country: {/*  u.location.country */} </div>\r\n                    <div>City: { /* u.location.city */}</div>\r\n                    <div> -</div>\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from '../../../assets/circles.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {\r\n    follow, unfollow, setCurrentPage, getUsers,\r\n    toggleFollowingProgress\r\n} from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    debugger;\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader />\r\n                : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, getUsers,\r\n        toggleFollowingProgress\r\n    }),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n/* let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        },\r\n    }\r\n} */","import React from 'react';\r\nimport view from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    OnStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || `-----`}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input autoFocus={true}\r\n                            onChange={this.OnStatusChange}\r\n                            onBlur={this.deactivateEditMode}\r\n                            value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport view from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        <div className={view.description}>\r\n          <img src={props.profile.photos.large} />\r\n          <div>\r\n            Status:  <ProfileStatus status={props.status}\r\n              updateStatus={props.updateStatus} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport view from './Post.module.css';\r\n\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={view.item}>\r\n      <img src='http://avatarmaker.ru/img/11/1044/104348.gif' />\r\n      {props.message}\r\n      <div>\r\n        <span>like  : {props.counter}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport view from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nfunction MyPosts(props) {\r\n\r\n    let posts_Elements = props.posts_Data.map(post_info => <Post counter={post_info.counter} message={post_info.message} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n        <div className={view.Posts_Block}>\r\n            <h2> My posts </h2>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={view.posts}>\r\n                {posts_Elements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name ='newPostText' component={Textarea} placeholder={'Post message'}\r\n                validate={[required, maxLength ]}/>\r\n            </div>\r\n            <div>\r\n                <button >Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import { addPost_actionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts_Data: state.profilePage.posts_Data,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost_actionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport view from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile}\r\n       status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) { userId = 2 };\r\n\r\n    this.props.getUserProfile(userId);\r\n    \r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} \r\n      status={this.props.status} updateStatus={this.props.updateStatus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLength = maxLengthCreator(15);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Login'} name={'login'} component={Input}\r\n            validate={[required, maxLength ]}/>\r\n        </div>\r\n        <div>\r\n            <Field placeholder={'Password'} name={'password'} component={Input}\r\n            validate={[required, maxLength ]}/>\r\n        </div>\r\n        <div>\r\n            <Field  component={Input} name={'rememberMe'} type={'checkbox'} \r\n            /> remember me\r\n            </div>\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\nconst onSubmit = (formdata) => {\r\n    console.log(formdata);\r\n}\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport { Route } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport LoginPage from  './components/Login/Login'\n\nfunction App(props) {\n  return (\n    <div className='app-wrapper' >\n      <HeaderContainer />\n      <NavbarContainer />\n      <div className='app-wrapper-content'>\n        <Route path=\"/dialogs\"\n          render={() => <DialogsContainer />} />\n        <Route path=\"/profile/:userId?\"\n          render={() => <ProfileContainer />} />\n        <Route path=\"/users\"\n          render={() => <UsersContainer />} />\n        <Route path=\"/news\" />\n        <Route path=\"/music\" />\n        <Route path=\"/settings\" />\n\n        <Route path=\"/login\"\n          render={() => <LoginPage />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nlet rerenderEntireTree = (state) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n\n  let state = store.getState();\n  rerenderEntireTree(state);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3UsOC\",\"dialog_person\":\"Dialogs_dialog_person__1qkMF\",\"dialog\":\"Dialogs_dialog__2wodh\",\"messages\":\"Dialogs_messages__3GD3Y\",\"newMessage_TextArea\":\"Dialogs_newMessage_TextArea__1iId2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3JXLg\",\"logo\":\"Header_logo__1m_VS\",\"loginBlock\":\"Header_loginBlock__3kIS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__2TkcK\",\"description\":\"ProfileInfo_description__AZ5mS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__3T-ey\",\"error\":\"FormsControls_error__3phr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__3_s5d\",\"selectedPage\":\"Users_selectedPage__37sQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts_Block\":\"MyPosts_Posts_Block__NAJYO\",\"posts\":\"MyPosts_posts__3Z0xT\"};"],"sourceRoot":""}